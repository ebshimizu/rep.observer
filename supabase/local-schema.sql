

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."actions" (
    "id" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "type" "text" DEFAULT ''::"text" NOT NULL,
    "level" "text" DEFAULT ''::"text" NOT NULL,
    "state" "text",
    "chamber" "text" DEFAULT ''::"text" NOT NULL,
    "congress" smallint,
    "bill_type" "text",
    "number" integer,
    "introduced_at" "date",
    "official_title" "text",
    "popular_title" "text",
    "short_title" "text",
    "sponsor_id" "text",
    "sponsor_type" "text",
    "status" "text",
    "status_at" timestamp with time zone,
    "tags" "text"[],
    "top_tag" "text",
    "summary" "jsonb",
    "cache_updated_at" timestamp with time zone,
    "source_url" "text",
    "session_id" bigint NOT NULL
);


ALTER TABLE "public"."actions" OWNER TO "postgres";


COMMENT ON TABLE "public"."actions" IS 'bills, nominations, treaties, resolutions, and everything else that got a vote in the legilsative body';



CREATE TABLE IF NOT EXISTS "public"."bill_amendments" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "action_id" "text" NOT NULL,
    "type" "text",
    "chamber" "text",
    "congress" smallint,
    "number" integer,
    "description" "text",
    "introduced_at" "date",
    "sponsor_id" "text",
    "status" "text",
    "status_at" timestamp with time zone,
    "cache_updated_at" timestamp with time zone,
    "id" "text" NOT NULL
);


ALTER TABLE "public"."bill_amendments" OWNER TO "postgres";


COMMENT ON TABLE "public"."bill_amendments" IS 'record of bill amendments (in brief)';



CREATE TABLE IF NOT EXISTS "public"."bill_cosponsors" (
    "rep_id" "text" NOT NULL,
    "action_id" "text" NOT NULL,
    "original_cosponsor" boolean,
    "sponsored_at" timestamp with time zone,
    "withdrawn_at" timestamp with time zone
);


ALTER TABLE "public"."bill_cosponsors" OWNER TO "postgres";


COMMENT ON TABLE "public"."bill_cosponsors" IS 'additional sponsor data for bills';



CREATE TABLE IF NOT EXISTS "public"."db_updates" (
    "script_id" "text" NOT NULL,
    "last_run" timestamp with time zone,
    "status" "text"
);


ALTER TABLE "public"."db_updates" OWNER TO "postgres";


COMMENT ON TABLE "public"."db_updates" IS 'mostly update status data for backend scripts';



CREATE TABLE IF NOT EXISTS "public"."rep_votes" (
    "rep_id" "text" NOT NULL,
    "vote_id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "vote" "text" NOT NULL
);


ALTER TABLE "public"."rep_votes" OWNER TO "postgres";


COMMENT ON TABLE "public"."rep_votes" IS 'record of what each representative voted';



CREATE TABLE IF NOT EXISTS "public"."representatives" (
    "id" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "full_name" "text" DEFAULT ''::"text" NOT NULL,
    "first_name" "text" DEFAULT ''::"text" NOT NULL,
    "last_name" "text" DEFAULT ''::"text" NOT NULL,
    "homepage" "text"
);


ALTER TABLE "public"."representatives" OWNER TO "postgres";


COMMENT ON TABLE "public"."representatives" IS 'members of congress and other legislative bodies';



CREATE TABLE IF NOT EXISTS "public"."sessions" (
    "id" bigint NOT NULL,
    "level" "text" NOT NULL,
    "state" "text",
    "chamber" "text",
    "congress" smallint,
    "title" "text",
    "start_date" "date",
    "end_date" "date"
);


ALTER TABLE "public"."sessions" OWNER TO "postgres";


COMMENT ON TABLE "public"."sessions" IS 'data about the congressional sessions';



ALTER TABLE "public"."sessions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."sessions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."terms" (
    "rep_id" "text" NOT NULL,
    "session_id" integer NOT NULL,
    "state" "text",
    "district" smallint,
    "party" "text"
);


ALTER TABLE "public"."terms" OWNER TO "postgres";


COMMENT ON TABLE "public"."terms" IS 'record of service for each unique representative';



CREATE TABLE IF NOT EXISTS "public"."votes" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "action_id" "text" NOT NULL,
    "result" "text",
    "question" "text",
    "type" "text",
    "chamber" "text",
    "congress" smallint,
    "session" bigint,
    "requires" "text",
    "number" integer,
    "date" timestamp with time zone,
    "cache_updated_at" timestamp with time zone,
    "alternate_id" "text"
);


ALTER TABLE "public"."votes" OWNER TO "postgres";


COMMENT ON TABLE "public"."votes" IS 'votes taken';



ALTER TABLE ONLY "public"."actions"
    ADD CONSTRAINT "actions_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."actions"
    ADD CONSTRAINT "actions_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."bill_amendments"
    ADD CONSTRAINT "bill_amendments_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."bill_cosponsors"
    ADD CONSTRAINT "bill_cosponsors_pkey" PRIMARY KEY ("rep_id", "action_id");



ALTER TABLE ONLY "public"."db_updates"
    ADD CONSTRAINT "db_updates_pkey" PRIMARY KEY ("script_id");



ALTER TABLE ONLY "public"."rep_votes"
    ADD CONSTRAINT "rep_votes_pkey" PRIMARY KEY ("rep_id", "vote_id");



ALTER TABLE ONLY "public"."representatives"
    ADD CONSTRAINT "representatives_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."sessions"
    ADD CONSTRAINT "sessions_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."terms"
    ADD CONSTRAINT "terms_pkey" PRIMARY KEY ("rep_id", "session_id");



ALTER TABLE ONLY "public"."votes"
    ADD CONSTRAINT "votes_alternate_id_key" UNIQUE ("alternate_id");



ALTER TABLE ONLY "public"."votes"
    ADD CONSTRAINT "votes_pkey" PRIMARY KEY ("id");



CREATE INDEX "rep_votes_rep_id_idx" ON "public"."rep_votes" USING "btree" ("rep_id");



ALTER TABLE ONLY "public"."actions"
    ADD CONSTRAINT "actions_session_id_fkey" FOREIGN KEY ("session_id") REFERENCES "public"."sessions"("id");



ALTER TABLE ONLY "public"."actions"
    ADD CONSTRAINT "actions_sponsor_id_fkey" FOREIGN KEY ("sponsor_id") REFERENCES "public"."representatives"("id");



ALTER TABLE ONLY "public"."bill_amendments"
    ADD CONSTRAINT "bill_amendments_action_id_fkey" FOREIGN KEY ("action_id") REFERENCES "public"."actions"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."bill_amendments"
    ADD CONSTRAINT "bill_amendments_sponsor_id_fkey" FOREIGN KEY ("sponsor_id") REFERENCES "public"."representatives"("id");



ALTER TABLE ONLY "public"."bill_cosponsors"
    ADD CONSTRAINT "bill_cosponsors_action_id_fkey" FOREIGN KEY ("action_id") REFERENCES "public"."actions"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."bill_cosponsors"
    ADD CONSTRAINT "bill_cosponsors_rep_id_fkey" FOREIGN KEY ("rep_id") REFERENCES "public"."representatives"("id");



ALTER TABLE ONLY "public"."rep_votes"
    ADD CONSTRAINT "rep_votes_rep_id_fkey" FOREIGN KEY ("rep_id") REFERENCES "public"."representatives"("id");



ALTER TABLE ONLY "public"."rep_votes"
    ADD CONSTRAINT "rep_votes_vote_id_fkey" FOREIGN KEY ("vote_id") REFERENCES "public"."votes"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."terms"
    ADD CONSTRAINT "terms_rep_id_fkey" FOREIGN KEY ("rep_id") REFERENCES "public"."representatives"("id");



ALTER TABLE ONLY "public"."terms"
    ADD CONSTRAINT "terms_session_id_fkey" FOREIGN KEY ("session_id") REFERENCES "public"."sessions"("id");



ALTER TABLE ONLY "public"."votes"
    ADD CONSTRAINT "votes_action_id_fkey" FOREIGN KEY ("action_id") REFERENCES "public"."actions"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."votes"
    ADD CONSTRAINT "votes_session_fkey" FOREIGN KEY ("session") REFERENCES "public"."sessions"("id");



CREATE POLICY "Enable read access for all users" ON "public"."actions" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."bill_amendments" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."bill_cosponsors" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."rep_votes" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."representatives" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."sessions" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."terms" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."votes" FOR SELECT USING (true);



ALTER TABLE "public"."actions" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."bill_amendments" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."bill_cosponsors" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."db_updates" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."rep_votes" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."representatives" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."sessions" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."terms" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."votes" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";





GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";
























































































































































































































GRANT ALL ON TABLE "public"."actions" TO "anon";
GRANT ALL ON TABLE "public"."actions" TO "authenticated";
GRANT ALL ON TABLE "public"."actions" TO "service_role";



GRANT ALL ON TABLE "public"."bill_amendments" TO "anon";
GRANT ALL ON TABLE "public"."bill_amendments" TO "authenticated";
GRANT ALL ON TABLE "public"."bill_amendments" TO "service_role";



GRANT ALL ON TABLE "public"."bill_cosponsors" TO "anon";
GRANT ALL ON TABLE "public"."bill_cosponsors" TO "authenticated";
GRANT ALL ON TABLE "public"."bill_cosponsors" TO "service_role";



GRANT ALL ON TABLE "public"."db_updates" TO "anon";
GRANT ALL ON TABLE "public"."db_updates" TO "authenticated";
GRANT ALL ON TABLE "public"."db_updates" TO "service_role";



GRANT ALL ON TABLE "public"."rep_votes" TO "anon";
GRANT ALL ON TABLE "public"."rep_votes" TO "authenticated";
GRANT ALL ON TABLE "public"."rep_votes" TO "service_role";



GRANT ALL ON TABLE "public"."representatives" TO "anon";
GRANT ALL ON TABLE "public"."representatives" TO "authenticated";
GRANT ALL ON TABLE "public"."representatives" TO "service_role";



GRANT ALL ON TABLE "public"."sessions" TO "anon";
GRANT ALL ON TABLE "public"."sessions" TO "authenticated";
GRANT ALL ON TABLE "public"."sessions" TO "service_role";



GRANT ALL ON SEQUENCE "public"."sessions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."sessions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."sessions_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."terms" TO "anon";
GRANT ALL ON TABLE "public"."terms" TO "authenticated";
GRANT ALL ON TABLE "public"."terms" TO "service_role";



GRANT ALL ON TABLE "public"."votes" TO "anon";
GRANT ALL ON TABLE "public"."votes" TO "authenticated";
GRANT ALL ON TABLE "public"."votes" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
